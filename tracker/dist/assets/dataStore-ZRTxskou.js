import{R as u,w as d,a as p}from"./index-hdv4Cp5W.js";const f=t=>{let e;const s=new Set,n=(a,l)=>{const o=typeof a=="function"?a(e):a;if(!Object.is(o,e)){const b=e;e=l??(typeof o!="object"||o===null)?o:Object.assign({},e,o),s.forEach(h=>h(e,b))}},c=()=>e,i={setState:n,getState:c,getInitialState:()=>g,subscribe:a=>(s.add(a),()=>s.delete(a))},g=e=t(n,c,i);return i},y=t=>t?f(t):f,I=t=>t;function m(t,e=I){const s=u.useSyncExternalStore(t.subscribe,()=>e(t.getState()),()=>e(t.getInitialState()));return u.useDebugValue(s),s}const S=t=>{const e=y(t),s=n=>m(e,n);return Object.assign(s,e),s},j=t=>t?S(t):S,r={totalTasks:0,completedTasks:0,activeGoals:0,activeHabits:0,totalNotes:0},v=j(t=>({stats:r,loading:!1,error:null,fetchStats:async()=>{try{if(!d.currentUser){t({error:"User not authenticated",loading:!1});return}t({loading:!0,error:null});const e=await d.currentUser.getIdToken(!0),s=await p.get("/api/stats",{headers:{Authorization:`Bearer ${e}`}});t({stats:s.data,loading:!1})}catch(e){console.error("Failed to fetch stats",e),e.response?.status===401?t({error:"Authentication required",loading:!1,stats:r}):t({error:"Failed to fetch dashboard stats.",loading:!1,stats:r})}}}));export{v as u};
